/*font-style import*/
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"');

/* || RESET */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img {
  display: block;
  max-width: 100%; /* Not overflow container */
  height: auto;
}

/* | UTILITY CLASSES */
.nowrap {
  white-space: nowrap; /* no break names */
}

/* || GENERAL STYLE */
html {
  scroll-behavior: smooth; /* soft scroll behavior*/ 
}

body {
  background-color: #1A1D1A;
  min-height: 100vh;
  background-image: radial-gradient(whitesmoke, #1A1D1A);
  display:flex;
  flex-direction: column;

  font: 1.5rem "Press Start 2P", system-ui;
  color: #03120E;
}

header, footer {
  position: sticky; /* Keep position, donÂ´t move */
  background-color: #1E293B;
  color: whitesmoke;
  text-align: center;
} /* Low specificity don keep the style is below change something */

/* :is(header, footer, .card) {
  position: sticky; 
  background-color: #1E293B;
  color: whitesmoke;
  text-align: center;
} */ /* High specificity keep the style */

/* :where(header, footer, .card) {
  position: sticky; 
  background-color: #1E293B;
  color: whitesmoke;
  text-align: center;
} */ /* :where don the same thing but has any specificity, which is (0, 0, 0) */

header {
  top: 0;
  /* color: #EF3054; */
}

nav {
  background-color: white;
  padding: 0.5rem;
  border-bottom: 2px solid #03120E;
  font-weight: bolder;
  
  display: flex;
  justify-content: space-evenly; /* space between a*/
}

nav a:any-link {
  color: black;
} /* any-link pseudo class, select both link in the visited pseudo class  */

/* nav a, nav a:visited {
  color: black;
} */

/* We can use :is(a:hover, a:focus), Selector Specificity. DRY (Don`t repeat your self)*/
nav :is(a:hover, a:focus) {
  color: hsl(187, 30%, 36%, 0.6);
} /* Pseudo class :active :is() */

/* Pseudo class: specifics states in the element. links */
nav a:active {
  color: #EF3054;
} /* Pseudo class :active */


/* Pseudo element: new html element in the document */

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding: 1rem;
}

.container {
  margin-inline: auto;
  display: flex;
  gap: 1rem;
  justify-content: center;
  align-items: center;
  flex-direction: row; 
  flex-wrap: wrap;
  flex-flow: row wrap;
  align-content: flex-start;
  align-content: space-evenly;
}

.card {
  scroll-margin-top: 8rem;
  width: min(100%), 350px;
  background-color: #ABA8B2;
  border: 3px solid #1E293B;
  border-radius: 20px;
  padding: 1rem;
  
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 30px;
}

.card:target {
  border: 3px solid #564592;
} /* When select a target using link. Pseudo class :target */


.card figure {
  display: flex;
  flex-flow: column nowrap; /* No break elements inside figure */
}

.card img {
  border: 5px double #1E293B;
  border-radius: 50%;
}

/* .card img[alt] {
  border: 8px solid #F896D8;
} */ /* Selects the image with alt attribute, check and help us to remember image with alt attribute. Pseudo class [] */

.card img:not([alt]) {
  border: 8px solid #F896D8;
} /* Checks the img with our alt attribute,. Pseudo class :not([]) */

/* .card:nth-child(2) {
  background-color: #CA7DF9;
} */ /* Selects card in the original order. Pseudo class :nth-child(2) */

/* .card:nth-child(odd) {
  background-color: #CA7DF9;
} */ /* Selects odds in the original order. Pseudo class :nth-child(odd)*/

/* .card:nth-child(even) {
  background-color: #CA7DF9;
} */ /* Selects even in the original order. Pseudo class :nth-child(odd)*/

.card figcaption {
  font-weight: bold;
  font-size: 2rem;
  margin: 1rem;
  text-align: center;
}

.card figcaption::before {
  content: ' Hello ';
  display: block;
} /* before figcaption add hello. Pseudo element ::after */

/* .card figcaption::first-line {
  font-size: 3em;
} */

.card p {
  text-align: center;
  position: relative;
}

.card p::before{
  content: open-quote;
  font-size: 2em;
  position: absolute;
  top: -0.2em;
  left: -0.2em;
} /* Apply single open quote to paragraph */

.card p::after{
  content: close-quote;
  font-size: 2em;
  position: absolute;
  top: -0.2em;
  right: -0.2em;
} /* Apply single close quote to paragraph */ 

footer {
  bottom: 0;
}

/* || MEDIA QUERY */
/* || SMALL */
@media screen and (min-width: 576px) {
  main {
    justify-content: center;
    flex-flow: row wrap; /* all main elements wrap */
    padding: 1rem;
  }

  .card {
    width: min(100%, 400px);
  }

  .card:last-child {
    order: -1;
  }
}

/* || MEDIUM */
@media screen and (min-width: 768px) {
  nav {
    display: none;
  }

  .card {
    width: min(100%, 325px);
  }

  .card figure {
    flex-flow: column-reverse;
  }
  
  .card p {
    margin-top: 1rem;
  }
}

/* || LARGE */
@media screen and (min-width: 992px) {
  .card {
    width: min(100%, 400px);
  }

  .card:nth-child(2) {
    order: -1;
  }
}

/* || XL */
@media screen and (min-width: 1200px) {
  .card {
    width: min(calc(33% - 1rem), 500px); /* Mix units together, dynamic. 33% -1rem of 500px */
  }
}

/* || MOBILE DEVICE LANDSCAPE */
@media screen and (min-height: 425px) and (min-aspect-ratio: 7/4){
  h1 {
    font-size: 1.5rem;
  }

  nav {
    display: none;
  }

  main {
    flex-flow: row nowrap;
    justify-content: space-evenly;
    align-items: stretch;
  }
  
  .card {
    width: min(calc(33% - 0.25rem), 200px); /* Mix units together, dynamic. 33% -1rem of 500px */
  }

  .card figcaption, .card p {
    font-size: 1.25rem;
  }
}

/* Media query: allow you to apply CSS styles depending on a device's media type (such as print vs. screen) or other features or characteristics such as screen resolution or orientation, aspect ratio, browser viewport width or height, user preferences such as preferring reduced motion, data usage, or transparency. */